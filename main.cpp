/*
Контрольная работа 1. Вариант №5
«Коллекция данных – дерево поиска»

1.	Спроектировать и реализовать АТД «BST – дерево» для коллекции,
    содержащей ключи и данные произвольного типа.
    Типы ключей и данных задаются клиентской программой в виде
    параметров шаблонного класса «BST – дерево».

    Интерфейс АТД «BST – дерево» включает  следующие операции:
    •	опрос размера дерева (количества узлов),
    •	очистка дерева (удаление всех узлов),
    •	проверка дерева на пустоту,
    •	поиск данных с заданным ключом,
    •	включение в дерево нового узла с заданным ключом и данными,
    •	удаление из дерева узла с заданным ключом,
    •	обход узлов в дереве по схеме, заданной в варианте задания, и вывод ключей в порядке обхода,
    •	дополнительная операция, заданная в варианте задания.

Для тестирования коллекции интерфейс АТД «BST – дерево» включает дополнительные операции:
    1.	вывод структуры дерева на экран,
    2.	Выполнить отладку и тестирование всех операций АТД «BST – дерево» с помощью меню операций.
    3.	Составить отчёт. Отчёт должен содержать следующие пункты:
        1)	титульный лист,
        2)	общее задание (пункты 1 – 4) и вариант задания,
        3)	формат АТД,
        4)	определение класса для коллекции «BST – дерево»,
        5)	выводы,
        6)	список использованной литературы,
        7)	приложение с текстами программ

Дополнительное задание для варианта №5
    •	Алгоритмы основных операций АТД  (вставки, удаления и поиска) реализуются в итерационной форме.
    •	Схема операции обхода: t → Lt → Rt..
    •	Дополнительная операция: объединение двух BST-деревьев.

*/


#include "mainwindow.h"
#include <QApplication>

int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    MainWindow w;
    w.show();

    return a.exec();
}
